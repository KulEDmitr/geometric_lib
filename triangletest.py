import unittest
from triangle import area, perimeter

class test_triangle_area(unittest.TestCase):
    def test_area(self):
        self.assertEqual(area(3,2), 3)
        self.assertEqual(area(4,3), 6)
        self.assertEqual(area(5,4), 10)
        self.assertEqual(area(6,5), 15)
    def exception_test_area(self):
        self.assertEqual(area(15,0), 0)
        self.assertEqual(area(0,15), 0)
        self.assertEqual(area(0,0), 0)
        self.assertEqual(area(-3,2), 0)
        self.assertEqual(area(3,-2), 0)
        self.assertEqual(area(-2,0), 0)
    def unexpected_types_test_area(self):
        self.assertEqual(area("3","2"), 3)
        self.assertEqual(area("4","3"), 6)
        self.assertEqual(area("5","4"), 10)
        self.assertEqual(area("6","5"), 15)
        self.assertEqual(area([3],[2]), 3)
        self.assertEqual(area([4],[3]), 6)
        self.assertEqual(area([5],[4]), 10)
        self.assertEqual(area([6],[5]), 15)
    def overflow_test_area(self):
        self.assertEqual(area(235462354623523642364238762368,2623642367924396243962436942398),3.0888450482075774e+59)
    def unexpected_types_of_exceptions_test_area(self):
        self.assertEqual(area("15","0"), 0)
        self.assertEqual(area("0","15"), 0)
        self.assertEqual(area("0","0"), 0)
        self.assertEqual(area("-3","2"), 0)
        self.assertEqual(area("3","-2"), 0)
        self.assertEqual(area("-2","0"), 0)
        self.assertEqual(area([15], [0]), 0)
        self.assertEqual(area([0], [15]), 0)
        self.assertEqual(area([0], [0]), 0)
        self.assertEqual(area([-3], [2]), 0)
        self.assertEqual(area([3], [-2]), 0)
        self.assertEqual(area([-2], [0]), 0)
class test_triangle_perimeter(unittest.TestCase):
    def test_area(self):
        self.assertEqual(perimeter(2,3,4), 9)
        self.assertEqual(perimeter(3,4,5), 12)
        self.assertEqual(perimeter(4,5,6), 15)
    def exception_test_area(self):      
        self.assertEqual(perimeter(0,3,4), 0)
        self.assertEqual(perimeter(0,4,5), 0)
        self.assertEqual(perimeter(0,5,6), 0)       
        self.assertEqual(perimeter(2,0,4), 0)
        self.assertEqual(perimeter(3,0,5), 0)
        self.assertEqual(perimeter(4,0,6), 0)
        self.assertEqual(perimeter(2,3,0), 0)
        self.assertEqual(perimeter(3,4,0), 0)
        self.assertEqual(perimeter(4,5,0), 0)
        self.assertEqual(perimeter(-2,3,4), 0)
        self.assertEqual(perimeter(3,-4,5), 0)
        self.assertEqual(perimeter(4,5,-6), 0)
    def exist_test_perimeter(self):
        self.assertEqual(perimeter(1,2,3), 0)
        self.assertEqual(perimeter(10,20,31), 0)
        self.assertEqual(perimeter(1,7,9), 0)
        self.assertEqual(perimeter(9,7,1), 0)
        self.assertEqual(perimeter(1,4,3), 0)
    def unexpected_types_test_area(self):
        self.assertEqual(perimeter("2","3","4"), 9)
        self.assertEqual(perimeter("3","4","5"), 12)
        self.assertEqual(perimeter("4","5","6"), 15)
        self.assertEqual(perimeter([2],[3],[4]), 9)
        self.assertEqual(perimeter([3],[4],[5]), 12)
        self.assertEqual(perimeter([4],[5],[6]), 15)
    def overflow_test_area(self):
        self.assertEqual(perimeter(2312312312321321,346329453268743268732564,3475869099123648712458762191204214),3475869099469978168039817772258099)
    def unexpected_types_of_exceptions_test_area(self):
        self.assertEqual(perimeter("0","3","4"), 0)
        self.assertEqual(perimeter("0","4","5"), 0)
        self.assertEqual(perimeter("0","5","6"), 0)
        self.assertEqual(perimeter("2","0","4"), 0)
        self.assertEqual(perimeter("3","0","5"), 0)
        self.assertEqual(perimeter("4","0","6"), 0)
        self.assertEqual(perimeter("2","3","0"), 0)
        self.assertEqual(perimeter("3","4","0"), 0)
        self.assertEqual(perimeter("4","5","0"), 0)
        self.assertEqual(perimeter("-2","3","4"), 0)
        self.assertEqual(perimeter("3","-4","5"), 0)
        self.assertEqual(perimeter("4","5","-6"), 0)
        self.assertEqual(perimeter([0],[3],[4]), 0)
        self.assertEqual(perimeter([0],[4],[5]), 0)
        self.assertEqual(perimeter([0],[5],[6]), 0)
        self.assertEqual(perimeter([2],[0],[4]), 0)
        self.assertEqual(perimeter([3],[0],[5]), 0)
        self.assertEqual(perimeter([4],[0],[6]), 0)
        self.assertEqual(perimeter([2],[3],[0]), 0)
        self.assertEqual(perimeter([3],[4],[0]), 0)
        self.assertEqual(perimeter([4],[5],[0]), 0)
        self.assertEqual(perimeter([-2],[3],[4]), 0)
        self.assertEqual(perimeter([3],[-4],[5]), 0)
        self.assertEqual(perimeter([4],[5],[-6]), 0)