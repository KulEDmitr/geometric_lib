def area(a, h):
    """
        Вычисляет площадь треугольника по основанию и высоте.

        Параметры:
        a (float): Основание треугольника.
        h (float): Высота треугольника.

        Возвращаемое значение:
        float: Площадь треугольника.

        Исключения:
        ValueError: Если основание или высота не являются числами, или если они меньше или равны нулю.

        Пример:
        >>> area(10, 5)
        25.0
        >>> area(7.5, 4)
        15.0
        >>> area("10", 5)
        ValueError: Ожидаются числовые значения для основания и высоты.
        >>> area(10, -5)
        ValueError: Основание и высота должны быть положительными числами.
        >>> area(0, 5)
        ValueError: Основание и высота не могут быть равны нулю.
    """
    if not isinstance(a, (int, float)) or not isinstance(h, (int, float)):
        raise ValueError("Ожидаются числовые значения для основания и высоты.")
    if a <= 0 or h <= 0:
        raise ValueError("Основание и высота должны быть положительными числами.")
    return a * h / 2


def perimeter(a, b, c):
    """
        Вычисляет периметр треугольника по его сторонам.

        Параметры:
        a (float): Первая сторона треугольника.
        b (float): Вторая сторона треугольника.
        c (float): Третья сторона треугольника.

        Возвращаемое значение:
        float: Периметр треугольника.

        Исключения:
        ValueError: Если одна из сторон не является числом, или если стороны не составляют правильный треугольник (не выполняется неравенство треугольника).

        Пример:
        >>> perimeter(3, 4, 5)
        12
        >>> perimeter(10, 5, 7)
        22
        >>> perimeter(3, 4, "5")
        ValueError: Ожидаются числовые значения для сторон треугольника.
        >>> perimeter(1, 2, 3)
        ValueError: Стороны не могут составлять треугольник (неравенство треугольника).
    """
    if not all(isinstance(side, (int, float)) for side in [a, b, c]):
        raise ValueError("Ожидаются числовые значения для сторон треугольника.")
    if a <= 0 or b <= 0 or c <= 0:
        raise ValueError("Стороны треугольника должны быть положительными числами.")
    if a + b <= c or a + c <= b or b + c <= a:
        raise ValueError("Стороны не могут составлять треугольник (неравенство треугольника).")
    return a + b + c
